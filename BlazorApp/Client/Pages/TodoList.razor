@page "/todo"
@using BlazorApp.Shared;

<table>
    <thead>
        <tr>
            <th>
                Id
            </th>
            <td>标题</td>
            <td>描述</td>
            <td>计划时间</td>
            <td>操作</td>
        </tr>
    </thead>
    <tbody>
        @if (!List.Any())
        {
            <tr>
                <td colspan="=4">数据加载zhong ...</td>
            </tr>
        }
        else
        {
            foreach (var item in List)
            {
                <tr>
                    <td>
                        @item.Id
                    </td>
                    <td>@item.Name</td>
                    <td>@item.Description</td>
                    <td>@item.PlanTime?.ToString("yyyy年MM月dd日 HH:mm")</td>
                    <td>
                        <a href="/todo/detail/@item.Id">详情</a>
                        <a href="javascript:;" @onclick="e=>Delete(item.Id)">删除</a>

                    </td>
                </tr>
            }
        }
    </tbody>

</table>

@inject HttpClient Http;

@inject IJSRuntime JS;

@code {


    IEnumerable<TodoOutput> List { get; set; } = Enumerable.Empty<TodoOutput>();

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            List = await Http.GetFromJsonAsync<IEnumerable<TodoOutput>>("api/todo");
            StateHasChanged();
        }
    }


    async Task Delete(int id)
    {
        var confirmed = await JS.InvokeAsync<bool>("confirm", "确定要删除吗?");
        if(!confirmed)
        {
            return;
        }

        var response = await Http.DeleteAsync($"api/todo/{id}");
        response.EnsureSuccessStatusCode();
         List = await Http.GetFromJsonAsync<IEnumerable<TodoOutput>>("api/todo");
            StateHasChanged();
    }




}

